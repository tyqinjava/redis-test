<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache https://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">


    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="20"/>
        <property name="minIdle" value="5"/>
        <property name="maxTotal" value="100"/>
        <property name="testOnReturn" value="true"/>
    </bean>

    <bean id="jedisShardInfo" class="redis.clients.jedis.JedisShardInfo">
        <constructor-arg name="host" value="127.0.0.1"/>
        <constructor-arg name="port" value="6379" type="int"/>
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" scope="prototype">
       <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
       <constructor-arg name="shards">
           <list>
               <ref bean="jedisShardInfo"/>
           </list>
       </constructor-arg>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="shardInfo" ref="jedisShardInfo"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="valueSerializer">
             <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg name="redisOperations" ref="redisTemplate"/>
        <property name="defaultExpiration" value="600"/>
    </bean>


    <!--配置了DelegatingFilterProxy就可以启用redis管理Session-->
    <!--RedisHttpSessionConfiguration自动装配了RedisConnectionFactory，看源码-->
    <!--<bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">-->
        <!--<property name="maxInactiveIntervalInSeconds" value="${session.timeout}" />-->
    <!--</bean>-->

</beans>